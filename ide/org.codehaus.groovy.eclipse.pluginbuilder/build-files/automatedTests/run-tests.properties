###############################################################################
# Copyright (c) 2007, 2009 Codehaus.org, SpringSource, and others.
# All rights reserved. This program and the accompanying materials
# are made available under the terms of the Eclipse Public License v1.0
# which accompanies this distribution, and is available at
# http://www.eclipse.org/legal/epl-v10.html
#
# Contributors:
#     Unattributed        - Initial API and implementation
#     Andrew Eisenberg - modified for Groovy Eclipse 2.0
###############################################################################
#
# BEGIN default properties for executing run-tests.xml standalone
#       (these properties are already set if run-tests.xml is called
#       from the postBuild target in custumTargets.xml) 
#

buildType=N
# archivePrefix is used to determine to which location the build result must be 
# extracted:
# if ${archivePrefix} == eclipse the folder will be ${test.eclipse.base} 
# ${test.eclipse.host} otherwise. 
# Note: The latter makes only sense if archive Prefix is set to ".". If it has
# another value the eclipse host won't be created successfully. 
archivePrefix=.

# test.eclipse.zip must be a zip file for windows and tar file for linux
test.eclipse.zip=${eclipse.local.tar.non.server}

#
# END default properties for executing run-tests.xml standalone
#

# test.eclipse.host points to a directory where an Eclipse installation for the
# tests will be built. Therefore ${test.eclipse.zip} will be extracted first and
# then there will be additional plug-ins be "installed", which means they will
# be extracted. The implication of this kind of installation is that the test 
# Eclipse host must be called with the clean parameter later
# It is expected that test.eclipse.host contains a subfolder eclipse.
# The plug-ins which will be installed are the plug-ins located in
# ${buildResultsDir} plus the eclipse test framework plus the autotestsuite.
test.eclipse.base=${eclipse.installation.dir}

test.eclipse.host=${test.eclipse.base}/eclipse

# Denotes the ant script where the target ui-test is defined	
test.library.xml=${test.eclipse.host}/plugins/org.eclipse.test_3.2.0/library.xml

# Directory where the reports are collected
test.result.dir=${test.eclipse.host}/test-reports

# Specifies the overall report in ${test.result.dir}/xml
test.aggregated.report=testReport_${buildLabel}.xml

# Workspace for the tests. Particularly useful is ${test.workspace}/.metadata/.log 
test.workspace=${test.eclipse.host}/workspace