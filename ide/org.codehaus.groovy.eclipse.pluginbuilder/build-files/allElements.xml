<!--
    Copyright (c) 2007, 2009 Codehaus.org, SpringSource, and others.
    All rights reserved. This program and the accompanying materials
    are made available under the terms of the Eclipse Public License v1.0
    which accompanies this distribution, and is available at
    http://www.eclipse.org/legal/epl-v10.html
   
    Contributors:
        Unattributed        - Initial API and implementation
        Andrew Eisenberg - modified for Groovy Eclipse 2.0
 -->
<project name="allElements delegation and assemble customTargets.xml">

 	<!-- ===================================================================== -->
 	<!-- Run a given ${target} on all elements being built                     -->
 	<!-- Replace element.id with the id of the top level element being built.  -->
	<!-- If element.id does not exist in ${buildDirectory}/features/element.id -->
	<!-- or ${baseLocation}/features/element.id, then you must provide the     -->
	<!-- location by setting the property "pluginPath"                         -->
 	<!-- Add on <ant> task for each top level element being built.             -->
 	<!-- ===================================================================== -->	
	<target name="allElementsDelegator">
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.codehaus.groovy.jdt.patch" />
		</ant>
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.codehaus.groovy.eclipse.feature" />
		</ant>
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.codehaus.groovy.alltests.feature" />
		</ant>
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.codehaus.groovy.eclipse.sdk" />
		</ant>
		
		<!--
		<ant antfile="${genericTargets}" target="${target}">
			<property name="type" value="feature" />
			<property name="id" value="org.codehaus.groovy.eclipse.testng.feature" />
		</ant>
		-->
	</target>

	
 	<!-- ===================================================================== -->
 	<!-- Targets to assemble the built elements for particular configurations  -->
 	<!-- These generally call the generated assemble scripts (named in         -->
 	<!-- ${assembleScriptName}) but may also add pre and post processing       -->
 	<!-- Add one target for each root element and each configuration           -->
 	<!-- Replace element.id with the id of the top level element being built   -->
 	<!-- ===================================================================== -->
	<target name="assemble.org.codehaus.groovy.jdt.patch">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">
			<property name="zipargs" value="" />
		</ant>
	</target>
	<target name="assemble.org.codehaus.groovy.eclipse.feature">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">
			<property name="zipargs" value="" />
		</ant>
	</target>
	<target name="assemble.org.codehaus.groovy.alltests.feature">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">
			<property name="zipargs" value="" />
		</ant>
	</target>
	<target name="assemble.org.codehaus.groovy.eclipse.sdk">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">
			<property name="zipargs" value="" />
		</ant>
	</target>
	<!--
	<target name="assemble.org.codehaus.groovy.eclipse.testng.feature">
		<ant antfile="${assembleScriptName}" dir="${buildDirectory}">
			<property name="zipargs" value="" />
		</ant>
	</target>
  -->
	
</project>